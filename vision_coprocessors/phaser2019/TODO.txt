- Capabilities
  - Test vision with field images.  Esp. from distance and multiple targets visible.  Filter on rect angles?
  - Change resolution to 320x240.  Adjust distance mapping.  Increase compression to lower bandwidth.  (shuffleboard vs. browser?)
  - Dual cam:
    - External util to change network table values.  Use to control camera viewing + viewing/tracking mode.
    - Abiity to switch camera used for streaming.  Fast?  Maintains port no?  Interrupts client stream?
    - Switch camera used for tracking.
    - Switch between viewing and tracking (exposure, brightness, etc).  
  - Performance: Disable pipeline when viewing.  Measure fps.  Also on B+.
  - Cam choice: Logitech C920 vs Lifecam3000
  - Calibrate extracted params for 320x480 and for C920.  Calculate coordinates vs. target + angle vs. target.
  - Assess latency/fps and accuracy at 640x480 vs 320x240.  
  - Move v4l2 settings to param file + use local frc.json file.
  - Wrapper to detect start-up fail and retry it?
  - Replace v4l2-ctl with C calls.  Also get device path from json - don't hardcode /dev/video0.
  - Add window dimensions to param file, import and set, use for yaw calc.
  - Param for converting pixels between centres (horizontal) to distance.
  - Compute estimated distance and yaw, publish to network table.
  - Detect if running on robot, operare network tables in client vs. server mode automatically.
  - Measure pipeline+detection latency *and* fps.  With both raspicam and USB cam.
  - Support separate cameras for viewing vs. tracking. Parameterize which used for what.
  - Tracking cargo.

- Accuracy
  - Check consistency of areas of rectangles vs. each other vs. distance.  Facing straight.  Vary distance.
  - Make calculation of target params more accurate.  Math greatly simplified now.
  - Filter rectangles on their tilt + confirm left vs. right tilt within ranges.
  - Tune HSV thresholds.  Add ability to tune interactively on Pi with trackbars.
  - Ratio of real distance vs. #pixels assumed to be the same in both dimensions.
    Characterize and handle differences for accuracy.

- Efficiency
  - Video fps, latency seems better in browser than shuffleboard.  Compare bandwidth too.
  - Minimize temp objects.
  - Don't annotate image if not going to stream output.

- Maintainability
  - Fix communication between network elements.
  - Split generic parts into xerolib + split both generic and game-specific parts into multiple files.

- Pi
  - Change back to read-only by default.

