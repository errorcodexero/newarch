Code To Write
-------------

xerobase
--------
HIDDevice
OIDevice - HIDDevice
DriverGamepad - HIDDevice
OIAxisScale
OIAxisSwitch
OIButton
CondAction - Action
ComputeAction - Acttion
TeleopController - ControllerBase
TestController - ControllerBase
AutoMode

phoenix
-------
Drivebase Subsystem (Matthew)
- Extract CAN indices, encoder indices, solenoid indices from paramter file
- Create and store: motors
- Create and store: NavX 
- Create and store: encoders
- Create and store: shifter solenoid
- Compute State: left, right, and total distance
- Compute State: robot angle
- Create directive: turn on motors to fixed voltage
- Create directive: turn on motors for fixed amount of time
- Create directive: drive straight for a fixed distance
- Create directive: rotate a fixed angle
- Create directive: path follower

Lifter Subsystem
- Create directive: go to low gear
- Create directive: climb hold position

Collector Subsystem (Nicole)
- Extract cube detect sensor from parameter file
- Aggregrate       : Grabber and Intake Subsystems
- Create and store : cube detector sensor
- Calculate status : has cube (more than just sensor status, has time window with hystersis)
- Create directive : collect cube
- Create directive : timed eject cube (speed is argument, can be a parameter)
- Create directive : sensor eject cube (speed is argument, can be a parameter)

LiftingCollector Subsystem
- Aggregrate       : Collector and Lifter Subsystems
- Create directive : CollectCube
                     o  Lifter action - go to floor
                     o  Collector action - go to collect state
                     o  WaitFor Collector.hasCube
                     o  Intake to timed run preset (collect)
                     o  Grabber to preset (hold)
                     o  WaitFor Intake.directive done
                     o  Intake to hold directive
                     o  Lifter to Drive preset

PhoenixOISubsystem
PhoenixOIDevice - OIDevice

PhoenixRobot Subsystem
- Aggregrate      : LiftingCollector and TankDrive Subsystems
- Actions         

PhoenixTeleopController - TeleopController

PhoenixAutoController - AutoController

Test Controller
- To be defined


--------------------------------------------------------------------------------------------------------------
COMPLETED
--------------------------------------------------------------------------------------------------------------
Parameter File Object (Matthew)
- Create a Value type to return the value from the parameter file
  o Types should be Integer, Real, or String
- Parser should detect strings based on quotes
- For numbers, parser should try to parse integer first, if it suceeds
  the type is integer.  If it fails, try to parse a double.  If it succeeds
  the type is real.  Otherwise, there is a parse error, print a message on 
  the message logger and return a failure status.

Robot
- Attach Parameter File Object (see above)

ActionSequence (Vi)
- Finish and merge into master

DispatchAction (Vi)
- Rename from Subsystem Action, merge into master

Intake Subsystem (Meg)
- Extract motor indices from parameter file
- Create and store motor
- Create directive: run at raw percent value (number or parameter name)
- Create directive: timed run raw percent value (number of parameter name)

